<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:AnimeJaNaiConverterGui.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="AnimeJaNaiConverterGui.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/logo.ico"
        Title="AnimeJaNaiConverterGui">

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel/>
    </Design.DataContext>

    <ScrollViewer HorizontalScrollBarVisibility="Auto">
      <StackPanel Margin="20">
        <Border Margin="0,10,0,0"
          CornerRadius="5"
          BorderBrush="Gray" BorderThickness="1"
          Padding="5">
          <StackPanel>
          
        <TabControl SelectedIndex="{Binding SelectedTabIndex}">
          <TabItem Header="Single Video Upscale" VerticalContentAlignment="Center" FontSize="18">
            <StackPanel>
              <StackPanel Orientation="Horizontal" Margin="0,20,0,10">
                <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Input Video</TextBlock>
                <TextBox x:Name="InputFileNameTextBox" Margin="0,0,5,0" Text="{Binding InputFilePath}" IsReadOnly="False" Width="800" DragDrop.AllowDrop="True" />
                <Button Content="Select File" Click="OpenInputFileButtonClick" />
              </StackPanel>

              <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Output Video</TextBlock>
                <TextBox x:Name="OutputFileNameTextBox" Margin="0,0,5,0" Text="{Binding OutputFilePath}" IsReadOnly="False" Width="800" DragDrop.AllowDrop="True" />
                <Button Content="Select File" Click="OpenOutputFileButtonClick" />
              </StackPanel>
            </StackPanel>
          </TabItem>
          <TabItem Header="Batch Video Upscale" VerticalAlignment="Center" FontSize="18">
            <StackPanel>
              <StackPanel Orientation="Horizontal" Margin="0,20,0,10">
                <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Input Folder</TextBlock>
                <TextBox x:Name="InputFolderNameTextBox" Margin="0,0,5,0" Text="{Binding InputFolderPath}" IsReadOnly="False" Width="800" DragDrop.AllowDrop="True" />
                <Button Content="Select Folder" Click="OpenInputFolderButtonClick" />
              </StackPanel>
            
              <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Output Folder</TextBlock>
                <TextBox x:Name="OutputFolderNameTextBox" Margin="0,0,5,0" Text="{Binding OutputFolderPath}" IsReadOnly="False" Width="800" DragDrop.AllowDrop="True" />
                <Button Content="Select Folder" Click="OpenOutputFolderButtonClick" />
              </StackPanel>
            </StackPanel>
          </TabItem>
        </TabControl>

        <StackPanel Orientation="Horizontal" Margin="10,20,0,0">
          <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Overwrite Existing Videos</TextBlock>
          <CheckBox IsChecked="{Binding OverwriteExistingVideos}" />
          <TextBlock FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0">If unchecked, upscaling will be skipped if the video already exists in the output path. If checked, any videos that already exist in the output path will be overwritten without warning. Use with caution.</TextBlock>
        </StackPanel>
          </StackPanel>
          </Border>

        <!-- Encoding -->
        <Border Margin="0,20,0,0"
          CornerRadius="5"
          BorderBrush="Gray" BorderThickness="1"
          Padding="5">
          <StackPanel>
          <StackPanel Orientation="Horizontal" Margin="10,20,0,10">
            <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">FFmpeg Output Video Settings</TextBlock>
            <TextBox Margin="0,0,5,0" Text="{Binding FfmpegVideoSettings}" IsReadOnly="False" Width="800" />
            <TextBlock FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0">Video encoding settings to pass to FFmpeg. Choose a preset below or edit the text to use custom settings.</TextBlock>
          </StackPanel>


          <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="10,20,0,10">
            <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">FFmpeg Presets</TextBlock>
            <ToggleButton IsChecked="{Binding FfmpegHevcNvencSelected}" Content="NVENC HEVC" Command="{Binding SetFfmpegHevcNvenc}" />
            <ToggleButton IsChecked="{Binding FfmpegX265Selected}" Content="x265 (CPU)" Command="{Binding SetFfmpegX265}" />
            <ToggleButton IsChecked="{Binding FfmpegX264Selected}" Content="x264 (CPU)" Command="{Binding SetFfmpegX264}" />
            <ToggleButton IsChecked="{Binding FfmpegLosslessSelected}" Content="Lossless (CPU)" Command="{Binding SetFfmpegLossless}" />
            <TextBlock FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0" xml:space="preserve">
              NVENC HEVC: HEVC compression with NVENC, fast encode using GPU but lower quality than CPU encoding.
              x265 (CPU): x265 compression (https://ffmpeg.org/ffmpeg-codecs.html#libx265), more efficient compression but slower to encode.
              x265 (CPU): x264 compression (https://ffmpeg.org/ffmpeg-codecs.html#libx264_002c-libx264rgb), OK compression, faster to encode.
              Lossless (CPU): FFV1 lossless compression, fastest to encode but extremely large filesize.
            </TextBlock>
          </StackPanel>
          </StackPanel>
        </Border>

        <!-- Upscaling -->
        <Border Margin="0,20,0,0"
                  CornerRadius="5"
                  BorderBrush="Gray" BorderThickness="1"
                  Padding="5">
          <StackPanel>
            <StackPanel Orientation="Horizontal" Margin="10,20,0,0">
              <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Show More Upscale Settings</TextBlock>
              <CheckBox IsChecked="{Binding ShowAdvancedSettings}" />
            </StackPanel>
        <ItemsControl ItemsSource="{Binding UpscaleSettings}" >
          <ItemsControl.ItemTemplate>
            <DataTemplate x:DataType="vm:UpscaleModel">
              <Border Margin="0,10,0,0"
                  CornerRadius="5"
                  BorderBrush="Gray" BorderThickness="1"
                  Padding="5">
                <StackPanel>
                  <TextBlock FontSize="16" FontWeight="Bold" Margin="10,20,0,20" Text="{Binding ModelHeader}" />
                  <StackPanel Orientation="Horizontal" Margin="10,0,0,10" IsVisible="{Binding $parent[ItemsControl].((vm:MainWindowViewModel)DataContext).ShowAdvancedSettings}}">
                    <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Resize Height Before Upscale</TextBlock>
                    <TextBox Margin="0,0,5,0" Text="{Binding ResizeHeightBeforeUpscale}" IsReadOnly="False" />
                    <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">px</TextBlock>
                    <TextBlock FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0">Resize the video to this height before running this model, set to 0 to disable.</TextBlock>
                  </StackPanel>
                  <StackPanel Orientation="Horizontal" Margin="10,0,0,10" IsVisible="{Binding $parent[ItemsControl].((vm:MainWindowViewModel)DataContext).ShowAdvancedSettings}">
                    <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Resize Factor Before Upscale</TextBlock>
                    <TextBox Margin="0,0,5,0" Text="{Binding ResizeFactorBeforeUpscale}" IsReadOnly="False" />
                    <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">x</TextBlock>
                    <TextBlock FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0">
                      Resize the video by this factor before running this model. The video width and height are divided by this number, so a value of 1 performs no resize, and a value of 2 cuts the width and height of the video in half.</TextBlock>
                  </StackPanel>
                  <StackPanel Orientation="Horizontal" Margin="10,0,0,10">
                    <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">ONNX Model Path</TextBlock>
                    <TextBox Margin="0,0,5,0" Text="{Binding OnnxModelPath}" IsReadOnly="False" Width="800" />
                    <Button Content="Select File" Click="OpenOnnxFileButtonClick" />
                    <TextBlock FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0">File path of the ONNX model to run.</TextBlock>
                  </StackPanel>
                  <StackPanel Orientation="Horizontal" Margin="10,0,0,10">
                    <TextBlock Text="{Binding $parent[vm:MainWindowViewModel].InputFilePath}" />
                  <Button Content="Remove" 
                          Command="{Binding $parent[ItemsControl].((vm:MainWindowViewModel)DataContext).DeleteModel}"
                          CommandParameter="{Binding}"
                          />
                  </StackPanel>
                </StackPanel>
              </Border>
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ItemsControl>
        <Button Margin="10,10,0,0" Content="Add Model" Command="{Binding AddModel}" />

        <StackPanel Orientation="Horizontal" Margin="10,20,0,10" IsVisible="{Binding ShowAdvancedSettings}">
          <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Enable RIFE 2x Interpolation</TextBlock>
          <CheckBox IsChecked="{Binding EnableRife}" />
          <TextBlock FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0">Whether or not to run RIFE video frame interpolation.</TextBlock>
        </StackPanel>

        <StackPanel Orientation="Horizontal" Margin="10,20,0,10">
          <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Final Resize Height</TextBlock>
          <TextBox Margin="0,0,5,0" Text="{Binding FinalResizeHeight}" IsReadOnly="False" />
          <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">px</TextBlock>
          <TextBlock FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0">
            Resize the video to this height after running all models, set to 0 to disable.
          </TextBlock>
        </StackPanel>

        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="10,10,0,10">
          <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Upscaling Backend</TextBlock>
          <ToggleButton IsChecked="{Binding TensorRtSelected}" Content="TensorRT" Command="{Binding SetTensorRtSelected}" />
          <ToggleButton IsChecked="{Binding DirectMlSelected}" Content="DirectML" Command="{Binding SetDirectMlSelected}" />
          <ToggleButton IsChecked="{Binding NcnnSelected}" Content="NCNN" Command="{Binding SetNcnnSelected}" />
          <TextBlock FontSize="12" VerticalAlignment="Center" Margin="20,0,0,0" xml:space="preserve">
          TensorRT: Fastest option but NVIDIA only. Supports fp16 and fp32 ONNX models. The initial engine generation may require several minutes but only needs to be done once.
          DirectML: Compatible with NVIDIA, AMD, and Intel GPUs but slower than TensorRT. Supports fp32 ONNX models only.
          NCNN: Compatible with NVIDIA, AMD, and Intel GPUs but typically slower than DirectML. Supports fp32 ONNX models only.
        </TextBlock>
        </StackPanel>

          </StackPanel>
        </Border>

        <StackPanel Orientation="Horizontal">
          <Button Margin="0,40,0,0" Content="Upscale" FontWeight="Bold" Background="Green" IsEnabled="{Binding UpscaleEnabled}" Command="{Binding RunUpscale}"></Button>
          <Button Margin="10,40,0,0" Content="Cancel" FontWeight="Bold" Background="Red" IsEnabled="{Binding Upscaling}" Command="{Binding CancelUpscale}"></Button>
        </StackPanel>


        <TextBlock Margin="0,20,0,0" Text="{Binding ValidationText}" />
        
        <ScrollViewer x:Name="ConsoleScrollViewer" Margin="0,20,0,0" Height="500" HorizontalScrollBarVisibility="Auto" Background="#111111" PropertyChanged="ConsoleScrollViewer_PropertyChanged">
          <SelectableTextBlock x:Name="ConsoleTextBlock" Margin="20" Text="{Binding ConsoleText}" FontFamily="Consolas" Foreground="Gray" PropertyChanged="ConsoleTextBlock_PropertyChanged" />
        </ScrollViewer>
      </StackPanel>
    </ScrollViewer>
</Window>
